/*
 * Workflow Engine API
 *
 * A Workflow Engine Web API
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = WorkflowApi.Client.Client.OpenAPIDateConverter;

namespace WorkflowApi.Client.Model
{
    /// <summary>
    /// Defines ApprovalField
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ApprovalField
    {
        /// <summary>
        /// Enum Id for value: Id
        /// </summary>
        [EnumMember(Value = "Id")]
        Id = 1,

        /// <summary>
        /// Enum ProcessId for value: ProcessId
        /// </summary>
        [EnumMember(Value = "ProcessId")]
        ProcessId = 2,

        /// <summary>
        /// Enum IdentityId for value: IdentityId
        /// </summary>
        [EnumMember(Value = "IdentityId")]
        IdentityId = 3,

        /// <summary>
        /// Enum AllowedTo for value: AllowedTo
        /// </summary>
        [EnumMember(Value = "AllowedTo")]
        AllowedTo = 4,

        /// <summary>
        /// Enum TransitionTime for value: TransitionTime
        /// </summary>
        [EnumMember(Value = "TransitionTime")]
        TransitionTime = 5,

        /// <summary>
        /// Enum Sort for value: Sort
        /// </summary>
        [EnumMember(Value = "Sort")]
        Sort = 6,

        /// <summary>
        /// Enum InitialState for value: InitialState
        /// </summary>
        [EnumMember(Value = "InitialState")]
        InitialState = 7,

        /// <summary>
        /// Enum DestinationState for value: DestinationState
        /// </summary>
        [EnumMember(Value = "DestinationState")]
        DestinationState = 8,

        /// <summary>
        /// Enum TriggerName for value: TriggerName
        /// </summary>
        [EnumMember(Value = "TriggerName")]
        TriggerName = 9,

        /// <summary>
        /// Enum Commentary for value: Commentary
        /// </summary>
        [EnumMember(Value = "Commentary")]
        Commentary = 10
    }

}
