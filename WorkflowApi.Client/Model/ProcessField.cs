/*
 * Workflow Engine API
 *
 * A Workflow Engine Web API
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = WorkflowApi.Client.Client.OpenAPIDateConverter;

namespace WorkflowApi.Client.Model
{
    /// <summary>
    /// Defines ProcessField
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ProcessField
    {
        /// <summary>
        /// Enum Id for value: Id
        /// </summary>
        [EnumMember(Value = "Id")]
        Id = 1,

        /// <summary>
        /// Enum StateName for value: StateName
        /// </summary>
        [EnumMember(Value = "StateName")]
        StateName = 2,

        /// <summary>
        /// Enum ActivityName for value: ActivityName
        /// </summary>
        [EnumMember(Value = "ActivityName")]
        ActivityName = 3,

        /// <summary>
        /// Enum SchemeId for value: SchemeId
        /// </summary>
        [EnumMember(Value = "SchemeId")]
        SchemeId = 4,

        /// <summary>
        /// Enum PreviousState for value: PreviousState
        /// </summary>
        [EnumMember(Value = "PreviousState")]
        PreviousState = 5,

        /// <summary>
        /// Enum PreviousStateForDirect for value: PreviousStateForDirect
        /// </summary>
        [EnumMember(Value = "PreviousStateForDirect")]
        PreviousStateForDirect = 6,

        /// <summary>
        /// Enum PreviousStateForReverse for value: PreviousStateForReverse
        /// </summary>
        [EnumMember(Value = "PreviousStateForReverse")]
        PreviousStateForReverse = 7,

        /// <summary>
        /// Enum PreviousActivity for value: PreviousActivity
        /// </summary>
        [EnumMember(Value = "PreviousActivity")]
        PreviousActivity = 8,

        /// <summary>
        /// Enum PreviousActivityForDirect for value: PreviousActivityForDirect
        /// </summary>
        [EnumMember(Value = "PreviousActivityForDirect")]
        PreviousActivityForDirect = 9,

        /// <summary>
        /// Enum PreviousActivityForReverse for value: PreviousActivityForReverse
        /// </summary>
        [EnumMember(Value = "PreviousActivityForReverse")]
        PreviousActivityForReverse = 10,

        /// <summary>
        /// Enum ParentProcessId for value: ParentProcessId
        /// </summary>
        [EnumMember(Value = "ParentProcessId")]
        ParentProcessId = 11,

        /// <summary>
        /// Enum RootProcessId for value: RootProcessId
        /// </summary>
        [EnumMember(Value = "RootProcessId")]
        RootProcessId = 12,

        /// <summary>
        /// Enum IsDeterminingParametersChanged for value: IsDeterminingParametersChanged
        /// </summary>
        [EnumMember(Value = "IsDeterminingParametersChanged")]
        IsDeterminingParametersChanged = 13,

        /// <summary>
        /// Enum TenantId for value: TenantId
        /// </summary>
        [EnumMember(Value = "TenantId")]
        TenantId = 14,

        /// <summary>
        /// Enum StartingTransition for value: StartingTransition
        /// </summary>
        [EnumMember(Value = "StartingTransition")]
        StartingTransition = 15,

        /// <summary>
        /// Enum SubprocessName for value: SubprocessName
        /// </summary>
        [EnumMember(Value = "SubprocessName")]
        SubprocessName = 16,

        /// <summary>
        /// Enum CreationDate for value: CreationDate
        /// </summary>
        [EnumMember(Value = "CreationDate")]
        CreationDate = 17,

        /// <summary>
        /// Enum LastTransitionDate for value: LastTransitionDate
        /// </summary>
        [EnumMember(Value = "LastTransitionDate")]
        LastTransitionDate = 18,

        /// <summary>
        /// Enum CalendarName for value: CalendarName
        /// </summary>
        [EnumMember(Value = "CalendarName")]
        CalendarName = 19
    }

}
