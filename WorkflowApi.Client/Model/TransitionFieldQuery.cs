/*
 * Workflow Engine API
 *
 * A Workflow Engine Web API
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = WorkflowApi.Client.Client.OpenAPIDateConverter;

namespace WorkflowApi.Client.Model
{
    /// <summary>
    /// TransitionFieldQuery
    /// </summary>
    [DataContract(Name = "TransitionFieldQuery")]
    public partial class TransitionFieldQuery : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransitionFieldQuery" /> class.
        /// </summary>
        /// <param name="search">search.</param>
        /// <param name="filters">filters.</param>
        /// <param name="sorts">sorts.</param>
        /// <param name="skip">skip.</param>
        /// <param name="take">take.</param>
        public TransitionFieldQuery(string search = default(string), List<TransitionFieldFilter> filters = default(List<TransitionFieldFilter>), List<TransitionFieldSort> sorts = default(List<TransitionFieldSort>), long skip = default(long), long take = default(long))
        {
            this.Search = search;
            this.Filters = filters;
            this.Sorts = sorts;
            this.Skip = skip;
            this.Take = take;
        }

        /// <summary>
        /// Gets or Sets Search
        /// </summary>
        [DataMember(Name = "search", EmitDefaultValue = true)]
        public string Search { get; set; }

        /// <summary>
        /// Gets or Sets Filters
        /// </summary>
        [DataMember(Name = "filters", EmitDefaultValue = true)]
        public List<TransitionFieldFilter> Filters { get; set; }

        /// <summary>
        /// Gets or Sets Sorts
        /// </summary>
        [DataMember(Name = "sorts", EmitDefaultValue = true)]
        public List<TransitionFieldSort> Sorts { get; set; }

        /// <summary>
        /// Gets or Sets Skip
        /// </summary>
        [DataMember(Name = "skip", EmitDefaultValue = false)]
        public long Skip { get; set; }

        /// <summary>
        /// Gets or Sets Take
        /// </summary>
        [DataMember(Name = "take", EmitDefaultValue = false)]
        public long Take { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TransitionFieldQuery {\n");
            sb.Append("  Search: ").Append(Search).Append("\n");
            sb.Append("  Filters: ").Append(Filters).Append("\n");
            sb.Append("  Sorts: ").Append(Sorts).Append("\n");
            sb.Append("  Skip: ").Append(Skip).Append("\n");
            sb.Append("  Take: ").Append(Take).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
